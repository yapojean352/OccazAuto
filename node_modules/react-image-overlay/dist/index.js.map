{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n  container: {\n    position: 'relative',\n  },\n  mainImage: {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat',\n  },\n  overlayImage: {\n    position: 'absolute',\n    objectFit: 'cover',\n    backgroundRepeat: 'no-repeat',\n  },\n};\n\nclass Overlay extends Component {\n  static propTypes = {\n    url: PropTypes.string.isRequired,\n    overlayUrl: PropTypes.string.isRequired,\n    imageHeight: PropTypes.number,\n    imageWidth: PropTypes.number,\n    overlayHeight: PropTypes.number,\n    overlayWidth: PropTypes.number,\n    position: PropTypes.string,\n    watermark: PropTypes.bool,\n    overlayPadding: PropTypes.number,\n  }\n\n  static defaultProps = {\n    imageHeight: 250,\n    imageWidth: 250,\n    overlayHeight: 30,\n    overlayWidth: 30,\n    position: null,\n    watermark: true,\n    overlayPadding: 10,\n  }\n\n  constructor() {\n    super();\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      url,\n      overlayUrl,\n      watermark,\n    } = this.props;\n    if (watermark) {\n      const context = this.canvasRef;\n\n      const img = new Image();\n      const overlay = new Image();\n      img.src = url;\n      \n\n      img.onload = () => {\n        overlay.src = overlayUrl;\n        overlay.onload = () => {\n          context.drawImage(img, 0, 0);\n          context.drawImage(...this.overlayCanvas(overlay));\n        };\n      };\n    }\n  }\n\n  overlayCanvas(overlay) {\n    const {\n      position,\n      overlayHeight,\n      imageHeight,\n      imageWidth,\n      overlayWidth,\n      overlayPadding,\n    } = this.props;\n    switch (position) {\n      case 'topLeft':\n        return [overlay, overlayPadding, overlayPadding];\n      case 'topRight':\n        return [overlay, (imageWidth - overlayWidth) - overlayPadding, overlayPadding];\n      case 'bottomLeft':\n        return [overlay, overlayPadding, (imageHeight - overlayHeight) - overlayPadding];\n      case 'center':\n        return [\n          overlay,\n          Math.floor(imageWidth / 2 - overlayWidth / 2),\n          Math.floor(imageHeight / 2 - overlayHeight / 2),\n        ];\n      default:\n        return [\n          overlay,\n          (imageHeight - overlayHeight) - overlayPadding,\n          (imageWidth - overlayWidth) - overlayPadding,\n        ];\n    }\n  }\n\n  overlayPosition() {\n    const { position, overlayPadding } = this.props;\n    switch (position) {\n      case 'topLeft':\n        return {\n          top: overlayPadding,\n          left: overlayPadding,\n        };\n      case 'topRight':\n        return {\n          top: overlayPadding,\n          right: overlayPadding,\n        };\n      case 'bottomLeft':\n        return {\n          bottom: overlayPadding,\n          left: overlayPadding,\n        };\n      case 'center':\n        return {\n          right: 0,\n          left: 0,\n          top: 0,\n          bottom: 0,\n          margin: 'auto auto',\n        };\n      default:\n        return {\n          bottom: overlayPadding,\n          right: overlayPadding,\n        };\n    }\n  }\n\n  render() {\n    const {\n      container,\n      mainImage,\n      overlayImage,\n    } = style;\n    const {\n      url,\n      imageHeight,\n      imageWidth,\n      overlayHeight,\n      overlayWidth,\n      position,\n      overlayUrl,\n      watermark,\n    } = this.props;\n\n    if (watermark) {\n      return (\n        <canvas\n          ref={c => this.canvasRef = c.getContext('2d')}\n          height={imageHeight}\n          width={imageWidth}\n        />\n      );\n    }\n\n    return (\n      <div\n        style={{\n          ...container,\n          height: imageHeight,\n          width: imageWidth,\n        }}\n      >\n        <img\n          src={url}\n          alt=\"main\"\n          style={{\n            ...mainImage,\n            backgroundImage: `url(\"${url}\")`,\n          }}\n        />\n        <img\n          src={overlayUrl}\n          alt=\"overlay\"\n          style={{\n            ...overlayImage,\n            height: overlayHeight,\n            width: overlayWidth,\n            ...this.overlayPosition(position),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Overlay;\n"],"names":["style","Overlay","canvasRef","React","createRef","props","url","overlayUrl","watermark","context","img","Image","overlay","src","onload","drawImage","overlayCanvas","position","overlayHeight","imageHeight","imageWidth","overlayWidth","overlayPadding","Math","floor","container","mainImage","overlayImage","c","getContext","overlayPosition","Component","propTypes","PropTypes","string","isRequired","number","bool","defaultProps"],"mappings":"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"}